/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import SportPlanner.SportPlanner;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;
import java.time.LocalDate;
import java.time.LocalTime;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractButton;
import javax.swing.ButtonGroup;
import javax.swing.JRadioButton;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ciccio
 */
public class PrenotaCampoGUI extends javax.swing.JFrame {
    private SportPlanner sportPlanner;
    private LocalDate date;
    private String username;
    private ArrayList<LocalTime> ore = new ArrayList<>();
    private String[] data= {"12:00","14:00","16:00","18:00", "20:00", "22:00"};
    /**
     * Creates new form PrenotaCampoGUI
     * @param sp
     * @param username
     */
    public PrenotaCampoGUI(SportPlanner sp, String username) {
        this.sportPlanner=sp;
        this.username=username;
        initComponents();
        setVisible(true);
        pack();
        jLabel4.setVisible(false);
        setLocationRelativeTo(null);
        confirmOra.setEnabled(false);
        ore=sportPlanner.getFasce();
        confirm.setEnabled(false);
        initTable();
        jTextArea1.setVisible(false);
        jTextArea1.setEditable(false);
       }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        campo = new javax.swing.JTextField();
        giorno = new javax.swing.JTextField();
        mese = new javax.swing.JTextField();
        anno = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        confirmOra = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        confirm = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Ebrima", 0, 36)); // NOI18N
        jLabel1.setText("SportPlanner");

        campo.setText("ID");
        campo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                campoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoFocusLost(evt);
            }
        });

        giorno.setText("Giorno");
        giorno.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                giornoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                giornoFocusLost(evt);
            }
        });

        mese.setText("Mese");
        mese.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                meseFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                meseFocusLost(evt);
            }
        });

        anno.setText("Anno");
        anno.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                annoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                annoFocusLost(evt);
            }
        });

        jLabel2.setText("Inserisici ID campo");

        jLabel3.setText("Inserisci una data:");

        jButton1.setText("Invia");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        confirmOra.setText("Conferma orario");
        confirmOra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmOraActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel4.setText("Questi sono gli orari disponibili:");

        confirm.setText("Conferma partita");
        confirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(campo, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(giorno, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mese, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(anno, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(confirmOra)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(confirm)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(giorno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mese, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(anno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmOra)
                    .addComponent(confirm))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      
            // TODO add your handling code here:
           try {  
               date = LocalDate.of(Integer.parseInt(anno.getText()), Integer.parseInt(mese.getText()), Integer.parseInt(giorno.getText()));
            String reg = "\\:";
            
               sportPlanner.gestisciPrenotazione(campo.getText(), date, username);
            
            for(String o: data){
                checkOrario(campo.getText(), LocalTime.parse(o));
            }
            

            jLabel4.setVisible(true);
            jTextArea1.setVisible(true);    
            jButton1.setEnabled(false);
            campo.setEditable(false);
            giorno.setEditable(false);
            mese.setEditable(false);
            anno.setEditable(false);

            initButton();

            // Define the panel to hold the buttons
        } catch (Exception ex) {
            jTextArea1.setVisible(true);
            jTextArea1.setText(ex.getMessage());
        }
       
    
    }//GEN-LAST:event_jButton1ActionPerformed

    private void confirmOraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmOraActionPerformed
        // TODO add your handling code here:
        String orario = getSelectedButtonText(buttonGroup1);
       
       String hh = orario.split("\\:")[0];
       String mm = orario.split("\\:")[1];
       float importo = sportPlanner.scegliFasciaOraria(LocalTime.of(Integer.parseInt(hh), Integer.parseInt(mm)));
       if(importo!=0){
            jTextArea1.setText("Ecco il tuo codice di prenotazione: " + sportPlanner.getPrenotazioneCorrente().getIdentificativoPrenotazione() + 
                    "\nImporto: " + importo);
            confirm.setEnabled(true);
       } 
       else jTextArea1.setText("Biglietto omaggio!");
    }//GEN-LAST:event_confirmOraActionPerformed

    private void campoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoFocusGained
        // TODO add your handling code here:
        focusGained(evt.getSource());
    }//GEN-LAST:event_campoFocusGained

    private void giornoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_giornoFocusGained
        // TODO add your handling code here:
        focusGained(evt.getSource());
    }//GEN-LAST:event_giornoFocusGained

    private void meseFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_meseFocusGained
        // TODO add your handling code here:
        focusGained(evt.getSource());
    }//GEN-LAST:event_meseFocusGained

    private void annoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_annoFocusGained
        // TODO add your handling code here:
        focusGained(evt.getSource());
    }//GEN-LAST:event_annoFocusGained

    private void campoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoFocusLost
        // TODO add your handling code here:
        focusLost(evt.getSource(), "ID");
    }//GEN-LAST:event_campoFocusLost

    private void giornoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_giornoFocusLost
        // TODO add your handling code here:
        focusLost(evt.getSource(), "Giorno");
    }//GEN-LAST:event_giornoFocusLost

    private void meseFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_meseFocusLost
        // TODO add your handling code here:
        focusLost(evt.getSource(), "Mese");
    }//GEN-LAST:event_meseFocusLost

    private void annoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_annoFocusLost
        // TODO add your handling code here:
        focusLost(evt.getSource(), "Anno");
    }//GEN-LAST:event_annoFocusLost

    private void confirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmActionPerformed
        // TODO add your handling code here:
        try {
            sportPlanner.confermaPrenotazione();
            new SelectOperationGUI(sportPlanner, username);
            setVisible(false);
            
        } catch (Exception ex) {
            jTextArea1.setVisible(true);
            jTextArea1.setText(ex.getMessage());
        }
    }//GEN-LAST:event_confirmActionPerformed

    private void initTable() {
        int i=0, j;
        String[][] campi = new String[sportPlanner.getCampi().size()][2];
        String[] col = {"ID", "Descrizione"};
        Iterator it = sportPlanner.getCampi().keySet().iterator();
        String app;
        while(it.hasNext()){
            app=(String) it.next();
            for(j=0;j<2;j++){
               if(j==0)
                   campi[i][j]=app;
               else
                   campi[i][j]=sportPlanner.getCampi().get(app).getDescrizoneSport();
            }
            i++;
        }
        DefaultTableModel tableModel = new DefaultTableModel(campi, col);
        jTable1.setModel(tableModel);
        jTable1.setEnabled(false);
        jTable1.setFocusable(false);
        jTable1.getTableHeader().setReorderingAllowed(false);
    }
    
    private void initButton(){
        jPanel1.setLayout(new FlowLayout(1));
        JRadioButton b;
        //if(!ore.isEmpty())
        for(LocalTime o: ore){

            b=new JRadioButton(o.toString());
            jPanel1.add(b);
            buttonGroup1.add(b);
        }
        confirmOra.setEnabled(true);

        jPanel1.setVisible(true);
    }
   
    public String getSelectedButtonText(ButtonGroup buttonGroup) {
        for (Enumeration<AbstractButton> buttons = buttonGroup.getElements(); buttons.hasMoreElements();) {
            AbstractButton button = buttons.nextElement();

            if (button.isSelected()) {
                return button.getText();
            }
        }
        return null;
    }
    
    private void focusGained(Object o){
        JTextField aux = (JTextField) o;
            aux.setText("");
            aux.setForeground(new Color(0, 0, 0));
        }
    
    
    private void focusLost(Object o, String text){
        JTextField aux = (JTextField) o;
         if(aux.getText().equals("")){
            aux.setForeground(new Color(164, 164, 164));
            aux.setText(text);
            
        }
    }
    
    public void checkOrario(String identificativoCampo, LocalTime time){
       Iterator it = sportPlanner.getElencoTornei().keySet().iterator();
       
       String aux;
        while(it.hasNext()){
            aux=(String) it.next();
            LocalDate fine = sportPlanner.getElencoTornei().get(aux).getDataFine();
            LocalDate inizio = sportPlanner.getElencoTornei().get(aux).getDataInizio();
            if(sportPlanner.getElencoTornei().get(aux).getOrario().contains(time) 
            && sportPlanner.getElencoTornei().get(aux).getCampi().containsKey(identificativoCampo)
            && ore.contains(time)
            && (date.isBefore(fine) && (date.isAfter(inizio)) || date.equals(fine)
             || (date.equals(inizio)))){
                ore.remove(time);
            }
        }
        it = sportPlanner.getElencoPrenotazioni().keySet().iterator();
        while(it.hasNext()){
            aux=(String) it.next();
            if(sportPlanner.getElencoPrenotazioni().get(aux).getOra().equals(time) 
            && sportPlanner.getElencoPrenotazioni().get(aux).getCampo().getIdentificativoCampo().equals(identificativoCampo)
            && ore.contains(time)){
                ore.remove(time);
               
            }
        }
    }
    
    /**
     * @param args the command line arguments
     */
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField anno;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField campo;
    private javax.swing.JButton confirm;
    private javax.swing.JButton confirmOra;
    private javax.swing.JTextField giorno;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField mese;
    // End of variables declaration//GEN-END:variables
}

